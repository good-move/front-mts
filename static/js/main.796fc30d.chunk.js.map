{"version":3,"sources":["App/Components/Header/header.js","App/Pages/EmployerPage/index.js","App/Components/VacanciesList/VacancyItem/index.js","axios.js","App/Components/VacanciesList/index.js","App/Pages/HrPage/index.js","App/Pages/MainPage/index.js","App/Components/Card/SkillsDistribution/DistributionItem/index.js","App/Components/Card/SkillsDistribution/index.js","App/Components/Card/Additional/AdditionalItem/index.js","App/Components/Card/Additional/index.js","App/Components/Card/card.js","App/Pages/Result/EmployerResultPage/index.js","App/Pages/Result/HrResultPage/index.js","App/App.js","serviceWorker.js","index.js"],"names":["Header","className","exact","to","Component","Option","Select","EmployerPage","props","onChange","value","setState","currentId","handleClick","history","push","state","onBackHandler","currentValue","isListVisible","data","bind","axios","get","then","response","catch","e","console","log","val","this","onBack","title","subTitle","showSearch","style","width","placeholder","optionFilterProp","onFocus","onBlur","onSearch","filterOption","input","option","children","toLowerCase","indexOf","map","item","name","first_name","last_name","id","type","icon","background","border","onClick","withRouter","VacancyItem","size","instance","create","baseURL","VacanciesList","vacancies","onVacancyClickHandler","key","HrPage","Typography","Text","Title","MainPage","onButtonClickHandler","path","DistributionItem","grade","weight","toFixed","fontWeight","SkillsDistribution","skillsDistribution","paddingRight","color","distribution","AdditionalItem","text","AdditionalSkills","additional","InfoCard","handleEmailButtonClick","isEmailVisible","isPhoneVisible","handlePhoneButtonClick","rate","skills","job","marginBottom","marginRight","Additional","marginTop","shape","marginLeft","EmployerResultPage","suggestions","arr","location","pathname","split","length","res","inference","undefined","surname","required_skills","NoEmployers","HrResultPage","isFetching","activeVacancy","employers","updateState","vacancyId","match","params","candidatesPromise","post","vacanciesPromise","Promise","all","candidatesData","vacanciesData","candidates","find","vac","Number","updateEmps","handleChange","defaultValue","loading","vacancy","employer","probability","current_position","App","component","EmployersPage","HrResult","HRPage","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ukBAsBeA,G,+LAhBP,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,+CAEJ,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAASE,GAAG,cAAZ,uEAEJ,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAASE,GAAG,OAAZ,Y,GAXCC,c,4CCGbC,EAAWC,IAAXD,OAEFE,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAkBVC,SAAW,SAACC,GACR,EAAKC,SAAS,CAACC,UAAWF,KApBX,EAgCnBG,YAAc,WACV,EAAKL,MAAMM,QAAQC,KAAnB,4BAA6C,EAAKC,MAAMJ,aAjCzC,EAoCnBK,cAAgB,WACZ,EAAKT,MAAMM,QAAQC,KAAK,MAnCxB,EAAKC,MAAQ,CACTE,aAAc,GACdC,eAAe,EACfC,KAAM,GACNR,UAAW,IAEf,EAAKC,YAAc,EAAKA,YAAYQ,KAAjB,gBARJ,E,iFAWE,IAAD,OAChBC,IAAMC,IAAI,kBACLC,MAAK,SAACC,GACH,EAAKd,SAAS,CAACS,KAAMK,EAASL,UAEjCM,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,Q,oGAazBG,M,+BAWC,IACCV,EAAQW,KAAKf,MAAbI,KAEP,OACI,yBAAKnB,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAY+B,OAAQD,KAAKd,cAAegB,MAAM,gBAAgBC,SAAS,gQAEvE,yBAAKjC,UAAU,uBACX,+TAGA,yBAAKA,UAAU,+BACf,kBAAC,IAAD,CACIkC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChBC,YAAY,yFACZC,iBAAiB,WACjB9B,SAAUsB,KAAKtB,SACf+B,QAAST,KAAKS,QACdC,OAAQV,KAAKU,OACbC,SAAUX,KAAKW,SACfC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOrC,MAAMsC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,IAIpE3B,GAAQA,EAAK6B,KAAI,SAAAC,GACb,IAAMC,EAAI,UAAMD,EAAKE,WAAX,YAAyBF,EAAKG,WACxC,OAAQ,kBAAChD,EAAD,CAAQK,MAAOwC,EAAKI,IAAKH,OAI7C,yBAAKlD,UAAU,gBACX,kBAAC,IAAD,CAAQsD,KAAK,UAAUC,KAAK,SAASpB,MAAO,CAACqB,WAAY,UAAWC,OAAQ,qBAAsBC,QAAS5B,KAAKlB,aAAhH,0C,GA3EGT,aAsFZwD,cAAWrD,GClFXsD,G,OARK,SAAC,GAAqB,IAApBV,EAAmB,EAAnBA,KAAMQ,EAAa,EAAbA,QACxB,OACI,yBAAK1D,UAAU,iBACX,4BAAQ0D,QAASA,EAASG,KAAK,SAASX,MCFrCY,EAJEzC,IAAM0C,OAAO,CAC1BC,QAAS,2BCKPC,G,kNACFlD,MAAQ,CACJmD,UAAW,I,EAGfC,sBAAwB,SAACd,GACrB,EAAK9C,MAAMM,QAAQC,KAAnB,sBAAuCuC,K,mFAGtB,IAAD,OAChBhC,EAAMC,IAAI,kBACLC,MAAK,SAAAJ,GACF,EAAKT,SAAS,CACVwD,UAAW/C,EAAKA,Y,+BAKtB,IAAD,OACL,OACI,yBAAKnB,UAAU,eACV8B,KAAKf,MAAMmD,UAAUlB,KAAI,gBAAEK,EAAF,EAAEA,GAAIrB,EAAN,EAAMA,MAAN,OACtB,kBAAC,EAAD,CACIoC,IAAKf,EACLH,KAAMlB,EACN0B,QAAS,kBAAM,EAAKS,sBAAsBd,c,GAzBtClD,cAiCbwD,cAAWM,G,SCNXI,G,OA1BSC,IAAhBC,KAAgBD,IAAVE,M,2MAIVxD,cAAgB,WACZ,EAAKT,MAAMM,QAAQC,KAAK,M,wEAIxB,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAYiB,OAAQD,KAAKd,cAAegB,MAAM,UAAUC,SAAS,gQACjE,yBAAKjC,UAAU,0BACX,yBAAKA,UAAU,kBACP,iVAGJ,kBAAC,EAAD,a,GAfHG,cCoBNsE,G,kNA3BXC,qBAAuB,SAACC,GACpB,EAAKpE,MAAMM,QAAQC,KAAnB,UAA2B6D,K,wEAGrB,IAAD,OACL,OACI,yBAAK3E,UAAU,YACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SAEf,wBAAIA,UAAU,cACV,uEADJ,8eAMA,yBAAKA,UAAU,0BACX,4BAAQ0D,QAAS,kBAAM,EAAKgB,qBAAqB,SAAjD,MACA,4BAAQhB,QAAS,kBAAM,EAAKgB,qBAAqB,gBAAjD,mB,GApBDvE,cC6BRyE,G,yNA3BX7D,MAAQ,CACJqB,MAAO,G,wEAGD,IAAD,SAIDN,KAAKvB,MADL2C,EAHC,EAGDA,KAEE2B,GAAkB,IALnB,EAGKC,QAEmBC,UAE7B,OACI,yBAAK/E,UAAU,kBACX,yBAAKA,UAAU,eACX,wCAAUkD,EAAV,OACA,0BAAMf,MAAO,CAAC6C,WAAY,SAA1B,UAAuCH,EAAvC,OAEJ,yBAAK7E,UAAU,QAAQ0D,QAAS,kBAAM,EAAKhD,SAAS,CAChD0B,MAAO,OAEP,yBAAKpC,UAAU,QAAQmC,MAAO,CAACC,MAAM,GAAD,OAAKyC,EAAL,c,GArBzB1E,cCShB8E,EAXY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBACzB,OACI,yBAAK/C,MAAO,CAACgD,aAAc,KACvB,wBAAIhD,MAAO,CAACiD,MAAO,YAAnB,yKAEIF,EAAmBlC,KAAI,SAAAqC,GAAY,OAAI,kBAAC,EAAqBA,QCI9DC,G,OARQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OACI,yBAAKvF,UAAU,kBACVuF,KCaEC,G,wLAbP,OACI,6BACI,yIACA,yBAAKxF,UAAU,qBAEP8B,KAAKvB,MAAMkF,WAAWzC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAgBsC,KAAMtC,EAAKjB,iB,GAPtD7B,cCkEhBuF,G,mBA/DX,WAAYnF,GAAQ,IAAD,8BACf,4CAAMA,KAOVoF,uBAAyB,WACrB,EAAKjF,SAAS,CAACkF,gBAAgB,IAAO,kBAAM,EAAKlF,SAAS,CAACmF,gBAAgB,QAT5D,EAYnBC,uBAAyB,WACrB,EAAKpF,SAAS,CAACmF,gBAAgB,IAAO,kBAAM,EAAKnF,SAAS,CAACkF,gBAAgB,QAX3E,EAAK7E,MAAQ,CACT6E,gBAAgB,EAChBC,gBAAgB,GAJL,E,sEAgBT,IAAD,EAC0C/D,KAAKvB,MAA7CyB,EADF,EACEA,MAAO+D,EADT,EACSA,KAAMC,EADf,EACeA,OAAQP,EADvB,EACuBA,WAAYQ,EADnC,EACmCA,IAExC,OACI,yBAAKjG,UAAU,QACX,wBAAImC,MAAO,CAAC+D,aAAc,IAAKlE,GAE3BiE,GACI,yBAAKjG,UAAU,aAAaiG,GAEpC,yBAAKjG,UAAU,WAAWmC,MAAO,CAAC+D,aAAc,KAC5C,yBAAKlG,UAAU,iBACX,wBAAImC,MAAO,CAACgE,YAAa,KAAzB,6LAEJ,0BAAMnG,UAAU,WAAhB,UAA8B+F,EAA9B,QAEJ,kBAAC,EAAD,CAAoBb,mBAAoBc,IACxC,kBAACI,EAAD,CAAkBX,WAAYA,IAE1BQ,GAAO,6BACH,kBAAC,IAAD,CAAQvC,QAAS5B,KAAK6D,uBAAwBxD,MAAO,CAACkE,UAAW,OAAQ7C,WAAY,UAAWC,OAAQ,qBAAsBF,KAAK,OAAOD,KAAK,UAAUgD,MAAM,WACnK,kBAAC,IAAD,CAAQ5C,QAAS5B,KAAKgE,uBAAwB3D,MAAO,CAACkE,UAAW,OAAQE,WAAY,OAAQ/C,WAAY,UAAWC,OAAQ,qBAAsBF,KAAK,QAAQD,KAAK,UAAUgD,MAAM,WACpL,yBAAKtG,UAAU,YAEX8B,KAAKf,MAAM6E,gBAAkB,iDAG7B9D,KAAKf,MAAM8E,gBAAkB,oDAMhCI,GAAO,6BACJ,kBAAC,IAAD,CAAQvC,QAAS5B,KAAK6D,uBAAwBrC,KAAK,UAAUnB,MAAO,CAACkE,UAAW,OAAQH,aAAc,OAAQ1C,WAAY,UAAWC,OAAQ,sBAA7I,4EAII3B,KAAKf,MAAM6E,gBAAkB,uD,GAvDlCzF,cCwDRqG,G,mBAxDX,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTJ,UAAW,GACXQ,KAAM,GACNsF,YAAa,IALF,E,iFASE,IAAD,OACVC,EAAM5E,KAAKvB,MAAMoG,SAASC,SAASC,MAAM,KAC/C/E,KAAKpB,SAAS,CAACC,UAAW+F,EAAIA,EAAII,OAAS,KAAK,WAC5CzF,IAAMC,IAAI,kBACLC,MAAK,SAAAwF,GACF,EAAKrG,SAAS,CAACS,KAAM4F,EAAI5F,UAE5BM,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAE5BL,IAAMC,IAAN,yBAA4B,EAAKP,MAAMJ,UAAvC,iBACKY,MAAK,SAAAwF,GACF,EAAKrG,SAAS,CAAC+F,YAAaM,EAAI5F,KAAK6F,eAExCvF,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,W,+BAK1B,IAAD,EACkCI,KAAKf,MAArCI,EADF,EACEA,KAAMR,EADR,EACQA,UAAW8F,EADnB,EACmBA,YAClBvD,OAA2B+D,IAApB9F,EAAKR,GAA2BQ,EAAKR,GAAWwC,WAAa,GACpE+D,OAA8BD,IAApB9F,EAAKR,GAA2BQ,EAAKR,GAAWyC,UAAY,GAC5E,OACI,yBAAKpD,UAAU,sBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,kCACVkD,EAAO,IAAMgE,GAGdT,EAAYzD,KAAI,SAAAC,GACZ,OACI,kBAAC,EAAD,CACIjB,MAAOiB,EAAKjB,MACZyD,WAAYxC,EAAKkE,gBACjBnB,OAAQ/C,EAAK+D,UACbjB,KAAK,iB,GA9CR5F,c,kBCMzBC,G,OAAWC,IAAXD,QAIFgH,GAHU9C,IAATE,MAGa,WAChB,OACI,6BACI,qEA0HG6C,E,2MApHXtG,MAAQ,CACJuG,YAAY,EACZC,cAAe,GACfC,UAAW,GACXtD,UAAW,I,EAGfuD,YAAc,WAAO,IACVC,EAAa,EAAKnH,MAAMoH,MAAMC,OAA9BF,UACDG,EAAoBxG,EAAMyG,KAAK,kBAAmB,CAACJ,IAEnDK,EAAmB1G,EAAMC,IAAI,kBACnC0G,QAAQC,IAAI,CAACJ,EAAmBE,IAAmBxG,MAAK,YAAsC,IAAD,mBAAnC2G,EAAmC,KAAnBC,EAAmB,KACzFxG,QAAQC,IAAIsG,EAAgBC,GAC5B,IAAMC,EAAaF,EAAe/G,KAC5B+C,EAAYiE,EAAchH,KAE1BoG,GAAiBrD,EAAUmE,MAAK,SAAAC,GAAG,OAAIA,EAAIjF,KAAOkF,OAAOb,OAAe,IAAI1F,MAElF,EAAKtB,SAAS,CACV4G,YAAY,EACZC,gBACAC,UAAWY,EACXlE,kB,EAKZsE,WAAa,SAACd,GACSrG,EAAMyG,KAAK,kBAAmB,CAACJ,IAAYnG,MAAK,SAAAJ,GAC/D,EAAKT,SAAS,CACV4G,YAAY,EACZE,UAAWrG,EAAKA,W,EAS5BsH,aAAe,SAAChI,GACZ,EAAKC,SAAS,CACV4G,YAAY,IAGhB,EAAK/G,MAAMM,QAAQC,KAAnB,sBAAuCL,IACvC,IAAM8G,GAAiB,EAAKxG,MAAMmD,UAAUmE,MAAK,SAAAC,GAAG,OAAIA,EAAIjF,IAAM5C,MAAU,IAAIuB,MAChF,EAAKtB,SAAS,CACV6G,kBAGJ,EAAKiB,WAAW/H,I,mFAdhBqB,KAAK2F,gB,+BAmBL,OAAI3F,KAAKf,MAAMuG,WAEP,6BACI,kBAAC,EAAD,MACA,yBAAKtH,UAAU,eACX,kBAAC,IAAD,QAMoB,IAAhC8B,KAAKf,MAAMyG,UAAUV,QAAgD,IAAhChF,KAAKf,MAAMmD,UAAU4C,OAEtD,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,OAMR,6BACI,kBAAC,EAAD,MACA,yBAAK9G,UAAU,kBACX,wFAAkB8B,KAAKf,MAAMwG,iBAEjC,yBAAKvH,UAAU,iBACX,kBAAC,IAAD,CAAQ0I,aAAc5G,KAAKf,MAAMwG,cACzBpF,MAAO,CAAEC,MAAO,KAChBuG,QAAS7G,KAAKf,MAAMuG,WACpB9G,SAAUsB,KAAK2G,cAClB3G,KAAKf,MAAMmD,UAAUlB,KAAI,SAAA4F,GAAO,OAC7B,kBAAC,EAAD,CACInI,MAAOmI,EAAQvF,GACfe,IAAKwE,EAAQvF,IAEZuF,EAAQ5G,YAKzB,yBAAKhC,UAAU,mBAEP8B,KAAKf,MAAMyG,UAAUxE,KAAI,SAAA6F,GAAQ,OAC7B,kBAAC,EAAD,CACI7G,MAAK,UAAK6G,EAAS1F,WAAd,YAA4B0F,EAASzF,WAC1C2C,KAAM8C,EAASC,YACf9C,OAAQ6C,EAAS7B,UACjBvB,WAAYoD,EAAS1B,gBACrBlB,IAAK4C,EAASE,iBAAiB/G,iB,GA3GpC7B,aCCZ6I,MAhBf,WACE,OACE,yBAAKhJ,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC0E,KAAM,IAAKsE,UAAYxE,IACpC,kBAAC,IAAD,CAAOE,KAAM,wBAAyBsE,UAAYzC,IAClD,kBAAC,IAAD,CAAO7B,KAAM,aAAcsE,UAAYC,IACvC,kBAAC,IAAD,CAAOvE,KAAM,yBAA0BsE,UAAWE,IAClD,kBAAC,IAAD,CAAOxE,KAAM,MAAOsE,UAAWG,QCNrBC,QACW,cAA7BC,OAAO3C,SAAS4C,UAEe,UAA7BD,OAAO3C,SAAS4C,UAEhBD,OAAO3C,SAAS4C,SAAS5B,MACvB,2D,OCXN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvI,MAAK,SAAAwI,GACjCA,EAAaC,kB","file":"static/js/main.796fc30d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './component.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"headerItem\">\n                    <NavLink exact to=\"/\">Главная</NavLink>\n                </div>\n                <div className=\"headerItem\">\n                    <NavLink to=\"/employers\">Сотрудникам</NavLink>\n                </div>\n                <div className=\"headerItem\">\n                    <NavLink to=\"/hr\">HR</NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './component.css';\nimport Header from '../../Components/Header/header';\nimport { Select, Button, PageHeader } from 'antd';\nimport {withRouter} from 'react-router-dom'; \nimport axios from 'axios';   \n\nconst { Option } = Select;\n\nclass EmployerPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentValue: '',\n            isListVisible: false,\n            data: [],\n            currentId: ''\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/api/employees')\n            .then((response) => {\n                this.setState({data: response.data})\n            })\n            .catch((e) => console.log(e))\n    }\n\n    onChange = (value) => {\n        this.setState({currentId: value})\n    }\n      \n    onBlur() {\n    }\n      \n    onFocus() {\n    }\n      \n    onSearch(val) {\n    }\n    \n    handleClick = () => {\n        this.props.history.push(`/employers/result/${this.state.currentId}`)\n    };\n\n    onBackHandler = () => {\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <div className=\"employerPage\">\n                <Header/>\n                <PageHeader onBack={this.onBackHandler} title=\"Employer mode\" subTitle=\"Поиск вакансий, наиболее подходящих сотруднику\" />\n                \n                <div className=\"employerPageContent\">\n                    <h1>\n                        Поиск рекомендованных вакансий по навыкам сотрудника\n                    </h1>\n                    <div className=\"employerPageContent__search\">\n                    <Select\n                        showSearch\n                        style={{ width: 400}}\n                        placeholder=\"Введите ваше имя\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        {\n                            data && data.map(item => {\n                                const name = `${item.first_name} ${item.last_name}`;\n                                return (<Option value={item.id}>{name}</Option>)\n                            })\n                        }\n                    </Select>\n                    <div className=\"submitButton\">\n                        <Button type=\"primary\" icon=\"search\" style={{background: '#E30E13', border: '1px solid #E30E13'}} onClick={this.handleClick}>\n                            Найти\n                        </Button>\n                    </div>  \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EmployerPage);","import React from 'react';\n\n\nimport './styles.css';\n\nconst VacancyItem = ({name, onClick}) => {\n    return (\n        <div className=\"vacancyButton\">\n            <button onClick={onClick} size=\"large\">{name}</button>\n        </div>\n    );\n};\n\nexport default VacancyItem;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:5000/',\n});\n\nexport default instance;","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport VacancyItem from './VacancyItem';\nimport axios from '../../../axios';\n\nimport './styles.css'\n\nclass VacanciesList extends Component {\n    state = {\n        vacancies: [],\n    };\n\n    onVacancyClickHandler = (id) => {\n        this.props.history.push(`/hr/results/${id}`);\n    };\n\n    componentDidMount() {\n        axios.get('/api/vacancies')\n            .then(data => {\n                this.setState({\n                    vacancies: data.data,\n                })\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"vacancyList\">\n                {this.state.vacancies.map(({id, title}) => (\n                    <VacancyItem\n                        key={id}\n                        name={title}\n                        onClick={() => this.onVacancyClickHandler(id)}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(VacanciesList);","import React, {Component} from 'react';\nimport VacanciesList from '../../Components/VacanciesList';\nimport { Typography } from 'antd';\n\nimport { PageHeader } from 'antd';\n\nimport './styles.css';\nimport Header from '../../Components/Header/header';\n\nconst { Text, Title } = Typography;\n\n\nclass HrPage extends Component {\n    onBackHandler = () => {\n        this.props.history.push('/');\n    };\n    \n    render() {\n        return (\n            <div>\n                <Header/>\n                <PageHeader onBack={this.onBackHandler} title=\"HR mode\" subTitle=\"Поиск вакансий, наиболее подходящих сотруднику\" />\n                <div className=\"vacListWrapper__center\">\n                    <div className='vacListWrapper'>\n                            <h1>\n                                Поиск рекомендованных сотрудников по открытым вакансиям\n                            </h1>\n                        <VacanciesList />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HrPage;\n","import React, { Component } from 'react';\nimport Header from '../../Components/Header/header';\nimport './component.css';\n\nclass MainPage extends Component {\n    onButtonClickHandler = (path) => {\n        this.props.history.push(`${path}`);\n    };\n\n    render() {\n        return (\n            <div className=\"mainPage\">\n                <Header/>\n                <div className=\"mainPageWrapper\">\n                    <div className=\"logo\">\n                    </div>\n                    <h1 className=\"mainHeader\">\n                        <span>\n                            Привет!\n                        </span>\n                        Нужна помощь в поиске вакансии или подборе персонала? Я помогу, просто выбери подходящий режим!\n                    </h1>\n                    <div className=\"mainPageButtonsWrapper\">\n                        <button onClick={() => this.onButtonClickHandler('/hr')}>HR</button>\n                        <button onClick={() => this.onButtonClickHandler('/employers')}>Employer</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainPage;","import React, {Component} from 'react';\n\nimport './styles.css'\n\n\nclass DistributionItem extends Component {\n    state = {\n        width: 0,\n    };\n\n    render() {\n\n        const {\n            name, weight,\n        } = this.props;\n        const grade = (weight * 100).toFixed();\n\n        return (\n            <div className=\"distribWrapper\">\n                <div className=\"dataWrapper\">\n                    <span>{`${name}: `}</span>\n                    <span style={{fontWeight: 'bold'}}>{`${grade}%`}</span>\n                </div>\n                <div className=\"outer\" onClick={() => this.setState({\n                    width: 0.9,\n                })}>\n                    <div className=\"inner\" style={{width: `${grade}%`}} ></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DistributionItem;\n","import React from 'react';\nimport DistributionItem from './DistributionItem';\n\nconst SkillsDistribution = ({skillsDistribution}) => {\n    return (\n        <div style={{paddingRight: 50}}>\n            <h4 style={{color: '#676670'}}>Весовое распределение навыков:</h4>\n            {\n                skillsDistribution.map(distribution => <DistributionItem {...distribution} />)\n            }\n        </div>\n    );\n};\n\nexport default SkillsDistribution;\n","import React from 'react';\n\nimport './styles.css';\n\nconst AdditionalItem = ({text}) => {\n    return (\n        <div className=\"additionalItem\">\n            {text}\n        </div>\n    );\n};\n\nexport default AdditionalItem;\n","import React, {Component} from 'react';\nimport AdditionalItem from './AdditionalItem';\n\nimport './styles.css';\n\nclass AdditionalSkills extends Component {\n    render() {\n        return (\n            <div>\n                <h4>Навыки для развития:</h4>\n                <div className=\"AdditionalWrapper\">\n                    {\n                        this.props.additional.map(item => <AdditionalItem text={item.title} />)\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdditionalSkills;","import React, {Component} from 'react';\nimport {Button} from 'antd';\nimport './component.css'\nimport SkillsDistribution from './SkillsDistribution';\nimport AdditionalSkills from './Additional';\nimport { thisExpression } from '@babel/types';\n\nclass InfoCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEmailVisible: false,\n            isPhoneVisible: false\n        }\n    }\n\n    handleEmailButtonClick = () => {\n        this.setState({isEmailVisible: true}, () => this.setState({isPhoneVisible: false}))\n    };\n\n    handlePhoneButtonClick = () => {\n        this.setState({isPhoneVisible: true}, () => this.setState({isEmailVisible: false}))\n    };\n\n    render() {\n        const {title, rate, skills, additional, job} = this.props;\n        const indexRateColor = rate > 0.8 ? 'green' : rate > 0.4 ? 'yellow' : 'red';\n        return (\n            <div className=\"card\">\n                <h3 style={{marginBottom: 0}}>{title}</h3>\n                {\n                    job &&\n                        <div className=\"cardLabel\">{job}</div>\n                }\n                <div className=\"cardRate\" style={{marginBottom: 10}}>\n                    <div className=\"cardItemTitle\">\n                        <h4 style={{marginRight: 10}}>Вероятность соответствия позиции: </h4>\n                    </div>\n                    <span className=\"CardTag\">{`${rate} %`}</span>\n                </div>\n                <SkillsDistribution skillsDistribution={skills}/>\n                <AdditionalSkills additional={additional}/>\n                {\n                    job && <div>\n                        <Button onClick={this.handleEmailButtonClick} style={{marginTop: '25px', background: '#e30613', border: '5px solid #e30613'}} icon='mail' type=\"primary\" shape=\"circle\"/>\n                    <Button onClick={this.handlePhoneButtonClick} style={{marginTop: '25px', marginLeft: '10px', background: '#e30613', border: '5px solid #e30613'}} icon='phone' type=\"primary\" shape=\"circle\"/>\n                    <div className=\"contacts\">\n                    {\n                        this.state.isEmailVisible && <div>disper@gmail.com</div>\n                    }\n                    {\n                        this.state.isPhoneVisible && <div>+7(932)283-38-28</div>\n                    }\n                    </div>\n                </div>\n                }\n                {\n                    !job && <div>\n                        <Button onClick={this.handleEmailButtonClick} type=\"primary\" style={{marginTop: '25px', marginBottom: '10px', background: '#e30613', border: '5px solid #e30613'}}>\n                            Откликнуться\n                        </Button>\n                        {\n                            this.state.isEmailVisible && <div>disper@gmail.com</div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default InfoCard;","import React, { Component } from 'react';\nimport Header from '../../../Components/Header/header';\nimport InfoCard from '../../../Components/Card/card';\nimport './component.css';\nimport axios from 'axios';\n\nclass EmployerResultPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentId: '',\n            data: [],\n            suggestions: []\n        };\n    }\n\n    componentDidMount() {\n        const arr = this.props.location.pathname.split('/');\n        this.setState({currentId: arr[arr.length - 1]}, () => {\n            axios.get('/api/employees')\n                .then(res => {\n                    this.setState({data: res.data})\n                })\n                .catch(e => console.log(e))\n\n            axios.get(`/api/employees/${this.state.currentId}/suggestions`)\n                .then(res => {\n                    this.setState({suggestions: res.data.inference})\n                })\n                .catch(e => console.log(e))\n        });\n\n    }\n\n    render() {\n        const {data, currentId, suggestions} = this.state;\n        const name = data[currentId] !== undefined ? data[currentId].first_name : '';\n        const surname = data[currentId] !== undefined ? data[currentId].last_name : '';\n        return (\n            <div className=\"employerResultPage\">\n                <Header/>\n                <div className=\"employerResultPageContent\">\n                    <div className=\"employerResultPageContent-name\">\n                        {name + ' ' + surname}\n                    </div>\n                    {\n                        suggestions.map(item => {\n                            return (\n                                <InfoCard\n                                    title={item.title}\n                                    additional={item.required_skills}\n                                    skills={item.inference}\n                                    rate='0.6'\n                                />\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EmployerResultPage;","import React, {Component} from 'react';\n\nimport { Select } from 'antd';\nimport { Spin } from 'antd';\nimport { Typography } from 'antd';\n\n\nimport './styles.css'\nimport Header from '../../../Components/Header/header';\nimport InfoCard from '../../../Components/Card/card';\nimport axios from '../../../../axios.js';\n\nconst { Option } = Select;\nconst {Title} = Typography;\n\n\nconst NoEmployers = () => {\n    return (\n        <div>\n            <h2>Sorry, no employers were not found</h2>\n        </div>\n    )\n};\n\nclass HrResultPage extends Component {\n    state = {\n        isFetching: true,\n        activeVacancy: '',\n        employers: [],\n        vacancies: [],\n    };\n\n    updateState = () => {\n        const {vacancyId} = this.props.match.params;\n        const candidatesPromise = axios.post('/api/candidates', [vacancyId]);\n\n        const vacanciesPromise = axios.get('/api/vacancies');\n        Promise.all([candidatesPromise, vacanciesPromise]).then(([candidatesData, vacanciesData]) => {\n            console.log(candidatesData, vacanciesData);\n            const candidates = candidatesData.data;\n            const vacancies = vacanciesData.data;\n\n            const activeVacancy = (vacancies.find(vac => vac.id === Number(vacancyId)) || {}).title;\n\n            this.setState({\n                isFetching: false,\n                activeVacancy,\n                employers: candidates,\n                vacancies,\n            })\n        });\n    };\n\n    updateEmps = (vacancyId) => {\n        const candidates = axios.post('/api/candidates', [vacancyId]).then(data => {\n            this.setState({\n                isFetching: false,\n                employers: data.data,\n            })\n        });\n    };\n\n    componentDidMount() {\n        this.updateState();\n    }\n\n    handleChange = (value) => {\n        this.setState({\n            isFetching: true,\n        });\n\n        this.props.history.push(`/hr/results/${value}`);\n        const activeVacancy = (this.state.vacancies.find(vac => vac.id == value) || {}).title;\n        this.setState({\n            activeVacancy,\n        });\n\n        this.updateEmps(value);\n        // this.updateState();\n    };\n\n    render() {\n        if (this.state.isFetching) {\n            return (\n                <div>\n                    <Header/>\n                    <div className=\"spinWrapper\" >\n                        <Spin />\n                    </div>\n                </div>\n            );\n        }\n\n        if (this.state.employers.length === 0 || this.state.vacancies.length === 0) {\n            return (\n                <div>\n                    <Header/>\n                    <NoEmployers/>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Header/>\n                <div className=\"hrResultHeader\">\n                    <h1>{`Вакансия: ${this.state.activeVacancy}`}</h1>\n                </div>\n                <div className=\"selectWrapper\">\n                    <Select defaultValue={this.state.activeVacancy}\n                            style={{ width: 350, }}\n                            loading={this.state.isFetching}\n                            onChange={this.handleChange} >\n                        {this.state.vacancies.map(vacancy => (\n                            <Option\n                                value={vacancy.id}\n                                key={vacancy.id}\n                            >\n                                {vacancy.title}\n                            </Option>\n                        ))}\n                    </Select>\n                </div>\n                <div className=\"infoCardWrapper\">\n                    {\n                        this.state.employers.map(employer => (\n                            <InfoCard\n                                title={`${employer.first_name} ${employer.last_name}`}\n                                rate={employer.probability}\n                                skills={employer.inference}\n                                additional={employer.required_skills}\n                                job={employer.current_position.title}\n                            />\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HrResultPage;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport EmployersPage from './Pages/EmployerPage';\nimport HRPage from './Pages/HrPage';\nimport MainPage from './Pages/MainPage';\nimport EmployerResultPage from './Pages/Result/EmployerResultPage';\nimport HrResult from './Pages/Result/HrResultPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={'/'} component={ MainPage } />\n          <Route path={'/employers/result/:id'} component={ EmployerResultPage } />\n          <Route path={'/employers'} component={ EmployersPage } />\n          <Route path={'/hr/results/:vacancyId'} component={HrResult}/>\n          <Route path={'/hr'} component={HRPage}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}